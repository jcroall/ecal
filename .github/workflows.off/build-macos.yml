name: Build macOS

on:  
  push:
  pull_request:
    branches:
      - master

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Install Dependencies
      run: brew install ninja doxygen graphviz protobuf hdf5

    - name: Install Capâ€™n Proto
      run: |
        mkdir "${{ runner.workspace }}/capnp"
        cd "${{ runner.workspace }}/capnp"
        curl -O https://capnproto.org/capnproto-c++-0.9.0.tar.gz
        tar zxf capnproto-c++-0.9.0.tar.gz
        cd capnproto-c++-0.9.0
        ./configure
        make -j
        sudo make install

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules:  'true'
        fetch-depth: 0
        
    - name: Downgrade Python version
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
        
    - name: Install Python requirements
      run: |
        sudo pip3 install -r "$GITHUB_WORKSPACE/requirements.txt"

    - name: CMake
      run: |
        mkdir "${{ runner.workspace }}/_build"
        cd "${{ runner.workspace }}/_build"
        cmake $GITHUB_WORKSPACE -G "Ninja" \
        -DHAS_HDF5=ON \
        -DHAS_QT5=ON \
        -DHAS_CURL=ON \
        -DHAS_CAPNPROTO=ON \
        -DBUILD_DOCS=OFF \
        -DBUILD_APPS=ON \
        -DBUILD_SAMPLES=ON \
        -DBUILD_TIME=ON \
        -DBUILD_PY_BINDING=ON \
        -DBUILD_CSHARP_BINDING=OFF \
        -DBUILD_ECAL_TESTS=ON \
        -DECAL_LAYER_ICEORYX=OFF \
        -DECAL_INCLUDE_PY_SAMPLES=OFF \
        -DECAL_INSTALL_SAMPLE_SOURCES=ON \
        -DECAL_JOIN_MULTICAST_TWICE=OFF \
        -DECAL_NPCAP_SUPPORT=OFF \
        -DECAL_THIRDPARTY_BUILD_CMAKE_FUNCTIONS=ON \
        -DECAL_THIRDPARTY_BUILD_PROTOBUF=OFF \
        -DECAL_THIRDPARTY_BUILD_SPDLOG=ON \
        -DECAL_THIRDPARTY_BUILD_TINYXML2=ON \
        -DECAL_THIRDPARTY_BUILD_FINEFTP=ON \
        -DECAL_THIRDPARTY_BUILD_CURL=OFF \
        -DECAL_THIRDPARTY_BUILD_GTEST=ON \
        -DECAL_THIRDPARTY_BUILD_HDF5=OFF \
        -DECAL_THIRDPARTY_BUILD_RECYCLE=ON \
        -DECAL_THIRDPARTY_BUILD_TCPUB=ON \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CXX_STANDARD=14
        sudo mkdir /etc/ecal
        sudo cp "$GITHUB_WORKSPACE/ecal/core/cfg/ecal.ini" /etc/ecal
      shell: bash

    - name: Build Release
      run: cmake --build . --config Release
      working-directory: ${{ runner.workspace }}/_build

    - name: Build Python Wheel
      run: cmake --build . --target create_python_wheel --config Release
      working-directory: ${{ runner.workspace }}/_build

#    - name: Build Documentation C
#      run: cmake --build . --target documentation_c
#      working-directory: ${{ runner.workspace }}/_build

#    - name: Build Documentation C++
#      run: cmake --build . --target documentation_cpp
#      working-directory: ${{ runner.workspace }}/_build

#    currently event test fails under macos ..
#    - name: Run Tests
#      run: ctest -V
#      working-directory: ${{ runner.workspace }}/_build

    - name: Pack
      run: cpack -G DragNDrop
      working-directory: ${{ runner.workspace }}/_build

    - name: Upload DMG
      uses: actions/upload-artifact@v2
      with:
        name: macos-dmg
        path: ${{ runner.workspace }}/_build/_deploy/*.dmg

    - name: Upload Python Wheel
      uses: actions/upload-artifact@v2
      with:
        name: macos-python-wheel
        path: ${{ runner.workspace }}/_build/_deploy/*.whl
